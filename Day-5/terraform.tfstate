{
  "version": 4,
  "terraform_version": "0.14.6",
  "serial": 63,
  "lineage": "c329c6a0-ed3f-9a4f-1c6a-babdff76bd22",
  "outputs": {
    "SSH": {
      "value": "Bastion = ssh ubuntu_rhpc@35.239.128.147",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "google_compute_project_metadata",
      "name": "my_ssh_key",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "vpn-project-304911",
            "metadata": {
              "ssh-keys": "      ubuntu_rhpc:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCytwpu5vms+miUdKWy07moaFRS3XqFaF9ywpGZYWu+dnubpZ3F5ELTjvAJJKAFAWA+na4eqIIJ9gisw4DEP3rWYrQkY4hBj6djVp5KRsNmLNltweto2KyvzHtVNbdARAfoKIRvtrfsgfLbLWox1ZrkMcgqjjpoqtcmbrLEy7izcW/3px64x+Oe6U4tsxACgRHQYgMJNXWxGCeh581yhjeUk58SWzIn/0Upcxy6pTkn9mdKXZ5xF9dMmOk02kR4zU26I5F4BVIImkBlcBTQR487AeGsz5es5XbxODcUWI6g9VpkzQObeQGHUOmVKwleMh01YiIr1KCYnbRkZtpY2njbQibs8lQGDGQ/2dhFFCZe6Mt8NimvY8md4Tr1lFdC0HCDI3FIgyB0GGN73VukCTET4rOL71cC/Eloxp4sZUKHunXVcrYjqQOOrNy9MyOlmaZxsdLvRfvwclQXSQcFdPvw6Q2tnhJMyPy0nfdxS2rndap7hwFJMKGdD51iNa5LGWU= ubuntu_rhpc\n      aliaksandr_mazurenka:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsgPL4xcYRKgQFz9W8xQ9mnWc9WMZxu2skx121st/f7w7QsEn4L++TCt77vsJ1nqRtfxF/MmXeC326QPulYW7YnOXTcGtmfuZQDVP72EBifglXBIz/CL0ChNfOLK7D5yH9SVpBJfKMU0XsWU+ObzEEpsPXbtC0kZahLRIroBuQjsV5gsaIVDiqIa2ztK1fDSKFXT9AfX1gnlll2Pp0JmVJbqi8gWnouS9Am10hZXm2HpCESBB4dZ9s2ZkYgWKZrXrIFO33ES/2IrLr2MdAsGjMBTlS57c5VSSqCP6PRZ7n08WM3wt41WmT+1EFof+XXgtWvCP95bY9gO2PGpoby15L aliaksandr_mazurenka\n"
            },
            "project": "vpn-project-304911",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.bastion",
      "mode": "managed",
      "type": "google_compute_instance",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 6,
          "attributes": {
            "allow_stopping_for_update": null,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key_raw": "",
                "disk_encryption_key_sha256": "",
                "initialize_params": [
                  {
                    "image": "https://www.googleapis.com/compute/v1/projects/centos-cloud/global/images/centos-7-v20210122",
                    "labels": {},
                    "size": 20,
                    "type": "pd-standard"
                  }
                ],
                "kms_key_self_link": "",
                "mode": "READ_WRITE",
                "source": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/zones/us-central1-a/disks/vpn"
              }
            ],
            "can_ip_forward": false,
            "confidential_instance_config": [],
            "cpu_platform": "Intel Haswell",
            "current_status": "RUNNING",
            "deletion_protection": false,
            "description": "",
            "desired_status": null,
            "enable_display": false,
            "guest_accelerator": [],
            "hostname": "",
            "id": "projects/vpn-project-304911/zones/us-central1-a/instances/vpn",
            "instance_id": "8611931033979836085",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "machine_type": "custom-1-4608",
            "metadata": null,
            "metadata_fingerprint": "atuqvqCVy70=",
            "metadata_startup_script": "#!/bin/bash\n\nsudo mkdir -p  /home/ubuntu_rhpc/.ssh\nsudo echo \"Host *\n\nForwardAgent yes\" \u003e /home/ubuntu_rhpc/.ssh/config\n\n\n\n\n\tos=\"centos\"\n\tos_version=$(grep -oE '[0-9]+' /etc/centos-release | head -1)\n\tgroup_name=\"nobody\"\n\nnew_client () {\n\t# Generates the custom client.ovpn\n\t{\n\tcat /etc/openvpn/server/client-common.txt\n\techo \"\u003cca\u003e\"\n\tcat /etc/openvpn/server/easy-rsa/pki/ca.crt\n\techo \"\u003c/ca\u003e\"\n\techo \"\u003ccert\u003e\"\n\tsed -ne '/BEGIN CERTIFICATE/,$ p' /etc/openvpn/server/easy-rsa/pki/issued/\"$client\".crt\n\techo \"\u003c/cert\u003e\"\n\techo \"\u003ckey\u003e\"\n\tcat /etc/openvpn/server/easy-rsa/pki/private/\"$client\".key\n\techo \"\u003c/key\u003e\"\n\techo \"\u003ctls-crypt\u003e\"\n\tsed -ne '/BEGIN OpenVPN Static key/,$ p' /etc/openvpn/server/tc.key\n\techo \"\u003c/tls-crypt\u003e\"\n\t} \u003e ~/\"$client\".ovpn\n}\n\nif [[ ! -e /etc/openvpn/server/server.conf ]]; then\n\tclear\n\t\t# If system has a single IPv4, it is selected automatically. Else, ask the user\n    if [[ $(ip -4 addr | grep inet | grep -vEc '127(\\.[0-9]{1,3}){3}') -eq 1 ]]; then\n\t\tip=$(ip -4 addr | grep inet | grep -vE '127(\\.[0-9]{1,3}){3}' | cut -d '/' -f 1 | grep -oE '[0-9]{1,3}(\\.[0-9]{1,3}){3}')\n\telse\n\t\tnumber_of_ip=$(ip -4 addr | grep inet | grep -vEc '127(\\.[0-9]{1,3}){3}')\n\t\techo\n\t\techo \"Which IPv4 address should be used?\"\n\t\tip -4 addr | grep inet | grep -vE '127(\\.[0-9]{1,3}){3}' | cut -d '/' -f 1 | grep -oE '[0-9]{1,3}(\\.[0-9]{1,3}){3}' | nl -s ') '\n\t\tread -p \"IPv4 address [1]: \" ip_number\n\t\tuntil [[ -z \"$ip_number\" || \"$ip_number\" =~ ^[0-9]+$ \u0026\u0026 \"$ip_number\" -le \"$number_of_ip\" ]]; do\n\t\t\techo \"$ip_number: invalid selection.\"\n\t\t\tread -p \"IPv4 address [1]: \" ip_number\n\t\tdone\n\t\t[[ -z \"$ip_number\" ]] \u0026\u0026 ip_number=\"1\"\n\t\tip=$(ip -4 addr | grep inet | grep -vE '127(\\.[0-9]{1,3}){3}' | cut -d '/' -f 1 | grep -oE '[0-9]{1,3}(\\.[0-9]{1,3}){3}' | sed -n \"$ip_number\"p)\n\tfi\n\tfi\n\t# If $ip is a private IP address, the server must be behind NAT\n\tif echo \"$ip\" | grep -qE '^(10\\.|172\\.1[6789]\\.|172\\.2[0-9]\\.|172\\.3[01]\\.|192\\.168)'; then\n\t\techo\n\t\techo \"This server is behind NAT. What is the public IPv4 address or hostname?\"\n\t\t# Get public IP and sanitize with grep\n\t\tget_public_ip=$(grep -m 1 -oE '^[0-9]{1,3}(\\.[0-9]{1,3}){3}$' \u003c\u003c\u003c \"$(wget -T 10 -t 1 -4qO- \"http://ip1.dynupdate.no-ip.com/\" || curl -m 10 -4Ls \"http://ip1.dynupdate.no-ip.com/\")\")\n\t\tpublic_ip=\"$get_public_ip\"\n\tfi\n\techo\n\techo \"Which protocol should OpenVPN use?\"\n\t\tprotocol=tcp\n\t  port=\"1194\"\n\t  dns=\"1\"\n    unsanitized_client=\"lab-client1\"\n\t# Allow a limited set of characters to avoid conflicts\n\tclient=$(sed 's/[^0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-]/_/g' \u003c\u003c\u003c \"$unsanitized_client\")\n\t[[ -z \"$client\" ]] \u0026\u0026 client=\"client\"\n\techo\n\techo \"OpenVPN installation is ready to begin.\"\n\t# Install a firewall in the rare case where one is not already available\n\tif ! systemctl is-active --quiet firewalld.service \u0026\u0026 ! hash iptables 2\u003e/dev/null; then\n\n\t\t\tfirewall=\"firewalld\"\n\t\t\t# We don't want to silently enable firewalld, so we give a subtle warning\n\t\t\t# If the user continues, firewalld will be installed and enabled during setup\n\n\tfi\n\t\t# If running inside a container, disable LimitNPROC to prevent conflicts\n\tif systemd-detect-virt -cq; then\n\t\tmkdir /etc/systemd/system/openvpn-server@server.service.d/ 2\u003e/dev/null\n\t\techo \"[Service]\nLimitNPROC=infinity\" \u003e /etc/systemd/system/openvpn-server@server.service.d/disable-limitnproc.conf\n\tfi\n\tif [[ \"$os\" = \"debian\" || \"$os\" = \"ubuntu\" ]]; then\n\t\tapt-get update\n\t\tapt-get install -y openvpn openssl ca-certificates $firewall\n\telif [[ \"$os\" = \"centos\" ]]; then\n\t\tyum install -y epel-release\n\t\tyum install -y openvpn openssl ca-certificates tar $firewall\n\telse\n\t\t# Else, OS must be Fedora\n\t\tdnf install -y openvpn openssl ca-certificates tar $firewall\n\tfi\n\t# If firewalld was just installed, enable it\n\tif [[ \"$firewall\" == \"firewalld\" ]]; then\n\t\tsystemctl enable --now firewalld.service\n\tfi\n\t# Get easy-rsa\n\teasy_rsa_url='https://github.com/OpenVPN/easy-rsa/releases/download/v3.0.8/EasyRSA-3.0.8.tgz'\n\tmkdir -p /etc/openvpn/server/easy-rsa/\n\t{ wget -qO- \"$easy_rsa_url\" 2\u003e/dev/null || curl -sL \"$easy_rsa_url\" ; } | tar xz -C /etc/openvpn/server/easy-rsa/ --strip-components 1\n\tchown -R root:root /etc/openvpn/server/easy-rsa/\n\tcd /etc/openvpn/server/easy-rsa/\n\t# Create the PKI, set up the CA and the server and client certificates\n\t./easyrsa init-pki\n\t./easyrsa --batch build-ca nopass\n\tEASYRSA_CERT_EXPIRE=3650 ./easyrsa build-server-full server nopass\n\tEASYRSA_CERT_EXPIRE=3650 ./easyrsa build-client-full \"$client\" nopass\n\tEASYRSA_CRL_DAYS=3650 ./easyrsa gen-crl\n\t# Move the stuff we need\n\tcp pki/ca.crt pki/private/ca.key pki/issued/server.crt pki/private/server.key pki/crl.pem /etc/openvpn/server\n\t# CRL is read with each client connection, while OpenVPN is dropped to nobody\n\tchown nobody:\"$group_name\" /etc/openvpn/server/crl.pem\n\t# Without +x in the directory, OpenVPN can't run a stat() on the CRL file\n\tchmod o+x /etc/openvpn/server/\n\t# Generate key for tls-crypt\n\topenvpn --genkey --secret /etc/openvpn/server/tc.key\n\t# Create the DH parameters file using the predefined ffdhe2048 group\n\techo '-----BEGIN DH PARAMETERS-----\nMIIBCAKCAQEA//////////+t+FRYortKmq/cViAnPTzx2LnFg84tNpWp4TZBFGQz\n+8yTnc4kmz75fS/jY2MMddj2gbICrsRhetPfHtXV/WVhJDP1H18GbtCFY2VVPe0a\n87VXE15/V8k1mE8McODmi3fipona8+/och3xWKE2rec1MKzKT0g6eXq8CrGCsyT7\nYdEIqUuyyOP7uWrat2DX9GgdT0Kj3jlN9K5W7edjcrsZCwenyO4KbXCeAvzhzffi\n7MA0BM0oNC9hkXL+nOmFg/+OTxIy7vKBg8P+OxtMb61zO7X8vC7CIAXFjvGDfRaD\nssbzSibBsu/6iGtCOGEoXJf//////////wIBAg==\n-----END DH PARAMETERS-----' \u003e /etc/openvpn/server/dh.pem\n\t# Generate server.conf\n\techo \"local $ip\nport $port\nproto $protocol\ndev tun\nca ca.crt\ncert server.crt\nkey server.key\ndh dh.pem\nauth SHA512\ntls-crypt tc.key\ntopology subnet\nserver 10.8.0.0 255.255.255.0\" \u003e /etc/openvpn/server/server.conf\n\t# IPv6\n\tif [[ -z \"$ip6\" ]]; then\n\t\techo 'push \"redirect-gateway def1 bypass-dhcp\"' \u003e\u003e /etc/openvpn/server/server.conf\n\telse\n\t\techo 'server-ipv6 fddd:1194:1194:1194::/64' \u003e\u003e /etc/openvpn/server/server.conf\n\t\techo 'push \"redirect-gateway def1 ipv6 bypass-dhcp\"' \u003e\u003e /etc/openvpn/server/server.conf\n\tfi\n\techo 'ifconfig-pool-persist ipp.txt' \u003e\u003e /etc/openvpn/server/server.conf\n\t# DNS\n\n\t\t\tif grep -q '^nameserver 127.0.0.53' \"/etc/resolv.conf\"; then\n\t\t\t\tresolv_conf=\"/run/systemd/resolve/resolv.conf\"\n\t\t\telse\n\t\t\t\tresolv_conf=\"/etc/resolv.conf\"\n\t\t\tfi\n\t\t\t# Obtain the resolvers from resolv.conf and use them for OpenVPN\n\t\t\tgrep -v '^#\\|^;' \"$resolv_conf\" | grep '^nameserver' | grep -oE '[0-9]{1,3}(\\.[0-9]{1,3}){3}' | while read line; do\n\t\t\t\techo \"push \\\"dhcp-option DNS $line\\\"\" \u003e\u003e /etc/openvpn/server/server.conf\n\t\t\tdone\n\techo \"keepalive 10 120\ncipher AES-256-CBC\nuser nobody\ngroup $group_name\npersist-key\npersist-tun\nstatus openvpn-status.log\nverb 3\ncrl-verify crl.pem\" \u003e\u003e /etc/openvpn/server/server.conf\n\tif [[ \"$protocol\" = \"udp\" ]]; then\n\t\techo \"explicit-exit-notify\" \u003e\u003e /etc/openvpn/server/server.conf\n\tfi\n\t# Enable net.ipv4.ip_forward for the system\n\techo 'net.ipv4.ip_forward=1' \u003e /etc/sysctl.d/30-openvpn-forward.conf\n\t# Enable without waiting for a reboot or service restart\n\techo 1 \u003e /proc/sys/net/ipv4/ip_forward\n\tif [[ -n \"$ip6\" ]]; then\n\t\t# Enable net.ipv6.conf.all.forwarding for the system\n\t\techo \"net.ipv6.conf.all.forwarding=1\" \u003e\u003e /etc/sysctl.d/30-openvpn-forward.conf\n\t\t# Enable without waiting for a reboot or service restart\n\t\techo 1 \u003e /proc/sys/net/ipv6/conf/all/forwarding\n\tfi\n\tif systemctl is-active --quiet firewalld.service; then\n\t\t# Using both permanent and not permanent rules to avoid a firewalld\n\t\t# reload.\n\t\t# We don't use --add-service=openvpn because that would only work with\n\t\t# the default port and protocol.\n\t\tfirewall-cmd --add-port=\"$port\"/\"$protocol\"\n\t\tfirewall-cmd --zone=trusted --add-source=10.8.0.0/24\n\t\tfirewall-cmd --permanent --add-port=\"$port\"/\"$protocol\"\n\t\tfirewall-cmd --permanent --zone=trusted --add-source=10.8.0.0/24\n\t\t# Set NAT for the VPN subnet\n\t\tfirewall-cmd --direct --add-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to \"$ip\"\n\t\tfirewall-cmd --permanent --direct --add-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to \"$ip\"\n\t\tif [[ -n \"$ip6\" ]]; then\n\t\t\tfirewall-cmd --zone=trusted --add-source=fddd:1194:1194:1194::/64\n\t\t\tfirewall-cmd --permanent --zone=trusted --add-source=fddd:1194:1194:1194::/64\n\t\t\tfirewall-cmd --direct --add-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j SNAT --to \"$ip6\"\n\t\t\tfirewall-cmd --permanent --direct --add-rule ipv6 nat POSTROUTING 0 -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j SNAT --to \"$ip6\"\n\t\tfi\n\telse\n\t\t# Create a service to set up persistent iptables rules\n\t\tiptables_path=$(command -v iptables)\n\t\tip6tables_path=$(command -v ip6tables)\n\t\t# nf_tables is not available as standard in OVZ kernels. So use iptables-legacy\n\t\t# if we are in OVZ, with a nf_tables backend and iptables-legacy is available.\n\t\tif [[ $(systemd-detect-virt) == \"openvz\" ]] \u0026\u0026 readlink -f \"$(command -v iptables)\" | grep -q \"nft\" \u0026\u0026 hash iptables-legacy 2\u003e/dev/null; then\n\t\t\tiptables_path=$(command -v iptables-legacy)\n\t\t\tip6tables_path=$(command -v ip6tables-legacy)\n\t\tfi\n\t\techo \"[Unit]\nBefore=network.target\n[Service]\nType=oneshot\nExecStart=$iptables_path -t nat -A POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to $ip\nExecStart=$iptables_path -I INPUT -p $protocol --dport $port -j ACCEPT\nExecStart=$iptables_path -I FORWARD -s 10.8.0.0/24 -j ACCEPT\nExecStart=$iptables_path -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT\nExecStop=$iptables_path -t nat -D POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to $ip\nExecStop=$iptables_path -D INPUT -p $protocol --dport $port -j ACCEPT\nExecStop=$iptables_path -D FORWARD -s 10.8.0.0/24 -j ACCEPT\nExecStop=$iptables_path -D FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT\" \u003e /etc/systemd/system/openvpn-iptables.service\n\t\tif [[ -n \"$ip6\" ]]; then\n\t\t\techo \"ExecStart=$ip6tables_path -t nat -A POSTROUTING -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j SNAT --to $ip6\nExecStart=$ip6tables_path -I FORWARD -s fddd:1194:1194:1194::/64 -j ACCEPT\nExecStart=$ip6tables_path -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT\nExecStop=$ip6tables_path -t nat -D POSTROUTING -s fddd:1194:1194:1194::/64 ! -d fddd:1194:1194:1194::/64 -j SNAT --to $ip6\nExecStop=$ip6tables_path -D FORWARD -s fddd:1194:1194:1194::/64 -j ACCEPT\nExecStop=$ip6tables_path -D FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT\" \u003e\u003e /etc/systemd/system/openvpn-iptables.service\n\t\tfi\n\t\techo \"RemainAfterExit=yes\n[Install]\nWantedBy=multi-user.target\" \u003e\u003e /etc/systemd/system/openvpn-iptables.service\n\t\tsystemctl enable --now openvpn-iptables.service\n\tfi\n\t# If SELinux is enabled and a custom port was selected, we need this\n\tif sestatus 2\u003e/dev/null | grep \"Current mode\" | grep -q \"enforcing\" \u0026\u0026 [[ \"$port\" != 1194 ]]; then\n\t\t# Install semanage if not already present\n\t\tif ! hash semanage 2\u003e/dev/null; then\n\t\t\tif [[ \"$os_version\" -eq 7 ]]; then\n\t\t\t\t# Centos 7\n\t\t\t\tyum install -y policycoreutils-python\n\t\t\telse\n\t\t\t\t# CentOS 8 or Fedora\n\t\t\t\tdnf install -y policycoreutils-python-utils\n\t\t\tfi\n\t\tfi\n\t\tsemanage port -a -t openvpn_port_t -p \"$protocol\" \"$port\"\n\tfi\n\t# If the server is behind NAT, use the correct IP address\n\t[[ -n \"$public_ip\" ]] \u0026\u0026 ip=\"$public_ip\"\n\t# client-common.txt is created so we have a template to add further users later\n\techo \"client\ndev tun\nproto $protocol\nremote $ip $port\nresolv-retry infinite\nnobind\npersist-key\npersist-tun\nremote-cert-tls server\nauth SHA512\ncipher AES-256-CBC\nignore-unknown-option block-outside-dns\nblock-outside-dns\nverb 3\" \u003e /etc/openvpn/server/client-common.txt\n\t# Enable and start the OpenVPN service\n\tsystemctl enable --now openvpn-server@server.service\n\t# Generates the custom client.ovpn\n\tnew_client\n\techo\n\techo \"Finished!\"\n\techo\n\techo \"The client configuration is available in:\" ~/\"$client.ovpn\"\n\techo \"New clients can be added by running this script again.\"\n\n\tclear\n\techo \"OpenVPN is already installed.\"\n\techo\n\techo \"Select an option:\"\n\techo \"   1) Add a new client\"\n\n\t\techo \"$option: invalid selection.\"\n\n\t\t\techo\n\t\t\techo \"Provide a name for the client:\"\n\t\t\tclient=$(sed 's/[^0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-]/_/g' \u003c\u003c\u003c \"$unsanitized_client\")\n\t\t\tcd /etc/openvpn/server/easy-rsa/\n\t\t\tEASYRSA_CERT_EXPIRE=3650 ./easyrsa build-client-full \"$client\" nopass\n\t\t\t# Generates the custom client.ovpn\n\t\t\tnew_client\n\t\t\techo\n\t\t\techo \"$client added. Configuration available in:\" ~/\"$client.ovpn\"\n\t\t\texit\n\n\nfi\n",
            "min_cpu_platform": "",
            "name": "vpn",
            "network_interface": [
              {
                "access_config": [
                  {
                    "nat_ip": "35.239.128.147",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "alias_ip_range": [],
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/global/networks/skosolapov-vpc",
                "network_ip": "10.13.1.2",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/regions/us-central1/subnetworks/public-vpn",
                "subnetwork_project": "vpn-project-304911"
              }
            ],
            "project": "vpn-project-304911",
            "resource_policies": null,
            "scheduling": [
              {
                "automatic_restart": true,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false
              }
            ],
            "scratch_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/zones/us-central1-a/instances/vpn",
            "service_account": [],
            "shielded_instance_config": [
              {
                "enable_integrity_monitoring": true,
                "enable_secure_boot": false,
                "enable_vtpm": true
              }
            ],
            "tags": [
              "ssh",
              "vpn"
            ],
            "tags_fingerprint": "TTa-bpMHt9o=",
            "timeouts": null,
            "zone": "us-central1-a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiNiJ9",
          "dependencies": [
            "module.vpc.google_compute_network.vpc",
            "module.vpc.google_compute_subnetwork.public"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow-bastion",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "22"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2021-02-15T04:25:47.928-08:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/vpn-project-304911/global/firewalls/fw-allow-bastion",
            "log_config": [],
            "name": "fw-allow-bastion",
            "network": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/global/networks/skosolapov-vpc",
            "priority": 1000,
            "project": "vpn-project-304911",
            "self_link": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/global/firewalls/fw-allow-bastion",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": [
              "ssh"
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.google_compute_network.vpc"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "80"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2021-02-15T04:25:47.929-08:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/vpn-project-304911/global/firewalls/fw-allow-http",
            "log_config": [],
            "name": "fw-allow-http",
            "network": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/global/networks/skosolapov-vpc",
            "priority": 1000,
            "project": "vpn-project-304911",
            "self_link": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/global/firewalls/fw-allow-http",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": [
              "http"
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.google_compute_network.vpc"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow-internal",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "0-65535"
                ],
                "protocol": "tcp"
              },
              {
                "ports": [
                  "0-65535"
                ],
                "protocol": "udp"
              },
              {
                "ports": [],
                "protocol": "icmp"
              }
            ],
            "creation_timestamp": "2021-02-15T04:25:47.947-08:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/vpn-project-304911/global/firewalls/fw-allow-internal",
            "log_config": [],
            "name": "fw-allow-internal",
            "network": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/global/networks/skosolapov-vpc",
            "priority": 1000,
            "project": "vpn-project-304911",
            "self_link": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/global/firewalls/fw-allow-internal",
            "source_ranges": [
              "10.13.1.0/24",
              "10.13.2.0/24"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.google_compute_network.vpc"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow-vpn",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "1194"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2021-02-15T04:25:48.024-08:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/vpn-project-304911/global/firewalls/fw-allow-vpn",
            "log_config": [],
            "name": "fw-allow-vpn",
            "network": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/global/networks/skosolapov-vpc",
            "priority": 1000,
            "project": "vpn-project-304911",
            "self_link": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/global/firewalls/fw-allow-vpn",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": [
              "vpn"
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.google_compute_network.vpc"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "firewall_internal_healthcheck",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "8080"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2021-02-15T04:25:47.923-08:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/vpn-project-304911/global/firewalls/fw-internal-hc",
            "log_config": [],
            "name": "fw-internal-hc",
            "network": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/global/networks/skosolapov-vpc",
            "priority": 1000,
            "project": "vpn-project-304911",
            "self_link": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/global/firewalls/fw-internal-hc",
            "source_ranges": [
              "130.211.0.0/22",
              "35.191.0.0/16"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": [
              "lb"
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.google_compute_network.vpc"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "google_compute_network",
      "name": "vpc",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "auto_create_subnetworks": false,
            "delete_default_routes_on_create": false,
            "description": "",
            "gateway_ipv4": "",
            "id": "projects/vpn-project-304911/global/networks/skosolapov-vpc",
            "mtu": 0,
            "name": "skosolapov-vpc",
            "project": "vpn-project-304911",
            "routing_mode": "GLOBAL",
            "self_link": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/global/networks/skosolapov-vpc",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "google_compute_router",
      "name": "router",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bgp": [
              {
                "advertise_mode": "DEFAULT",
                "advertised_groups": null,
                "advertised_ip_ranges": [],
                "asn": 64514
              }
            ],
            "creation_timestamp": "2021-02-15T04:26:00.593-08:00",
            "description": "",
            "id": "projects/vpn-project-304911/regions/us-central1/routers/my-router",
            "name": "my-router",
            "network": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/global/networks/skosolapov-vpc",
            "project": "vpn-project-304911",
            "region": "us-central1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/regions/us-central1/routers/my-router",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.google_compute_network.vpc",
            "module.vpc.google_compute_subnetwork.private"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "google_compute_router_nat",
      "name": "nat",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "drain_nat_ips": null,
            "enable_endpoint_independent_mapping": true,
            "icmp_idle_timeout_sec": 30,
            "id": "vpn-project-304911/us-central1/my-router/my-router-nat",
            "log_config": [
              {
                "enable": true,
                "filter": "ERRORS_ONLY"
              }
            ],
            "min_ports_per_vm": 0,
            "name": "my-router-nat",
            "nat_ip_allocate_option": "AUTO_ONLY",
            "nat_ips": null,
            "project": "vpn-project-304911",
            "region": "us-central1",
            "router": "my-router",
            "source_subnetwork_ip_ranges_to_nat": "ALL_SUBNETWORKS_ALL_IP_RANGES",
            "subnetwork": [],
            "tcp_established_idle_timeout_sec": 1200,
            "tcp_transitory_idle_timeout_sec": 30,
            "timeouts": null,
            "udp_idle_timeout_sec": 30
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.google_compute_network.vpc",
            "module.vpc.google_compute_router.router",
            "module.vpc.google_compute_subnetwork.private"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "google_compute_subnetwork",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2021-02-15T04:25:48.524-08:00",
            "description": "",
            "fingerprint": null,
            "gateway_address": "10.13.2.1",
            "id": "projects/vpn-project-304911/regions/us-central1/subnetworks/private-vpn",
            "ip_cidr_range": "10.13.2.0/24",
            "log_config": [],
            "name": "private-vpn",
            "network": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/global/networks/skosolapov-vpc",
            "private_ip_google_access": false,
            "private_ipv6_google_access": "DISABLE_GOOGLE_ACCESS",
            "project": "vpn-project-304911",
            "region": "us-central1",
            "secondary_ip_range": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/regions/us-central1/subnetworks/private-vpn",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAsImRlbGV0ZSI6MzYwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.google_compute_network.vpc"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "google_compute_subnetwork",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2021-02-15T04:25:48.093-08:00",
            "description": "",
            "fingerprint": null,
            "gateway_address": "10.13.1.1",
            "id": "projects/vpn-project-304911/regions/us-central1/subnetworks/public-vpn",
            "ip_cidr_range": "10.13.1.0/24",
            "log_config": [],
            "name": "public-vpn",
            "network": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/global/networks/skosolapov-vpc",
            "private_ip_google_access": false,
            "private_ipv6_google_access": "DISABLE_GOOGLE_ACCESS",
            "project": "vpn-project-304911",
            "region": "us-central1",
            "secondary_ip_range": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/vpn-project-304911/regions/us-central1/subnetworks/public-vpn",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAsImRlbGV0ZSI6MzYwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.google_compute_network.vpc"
          ]
        }
      ]
    }
  ]
}
